/*
 *
 * {{properCase name }}
 *
 */
/* default */
import React from 'react';
import PropTypes from 'prop-types';
import injectSaga from 'utils/injectSaga';
import injectReducer from 'utils/injectReducer';
import { connect } from 'react-redux';
import { compose } from 'redux'
{{#if wantActionsAndReducer}}
import { createStructuredSelector } from 'reselect';
{{/if}}
/* material-ui core */
/* material-ui icon */
/* containers */
/* components */
/* image */
/* ref */
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl';
{{/if}}
{{#if wantMessages}}
import messages from './messages';
{{/if}}
{{#if wantHeaders}}
import { Helmet } from 'react-helmet';
{{/if}}
{{#if wantActionsAndReducer}}
import makeSelect{{properCase name}} from './selectors';
{{/if}}

/* eslint-disable react/prefer-stateless-function */
export class {{ properCase name }} extends React.{{{ component }}} {
  render() {
    return (
      <div>
      {{#if wantHeaders}}
        <Helmet>
          <title>{{properCase name}}</title>
          <meta
            name="description"
            content="Description of {{properCase name}}"
          />
        </Helmet>
      {{/if}}
      {{#if wantMessages}}
        <FormattedMessage {...messages.header} />
      {{/if}}
      </div>
    );
  }
}

{{ properCase name }}.propTypes = {
  dispatch: PropTypes.func.isRequired,
};

{{#if wantActionsAndReducer}}
const mapStateToProps = createStructuredSelector({
  {{name}}: makeSelect{{properCase name}}(),
});
{{/if}}

function mapDispatchToProps(dispatch) {
  return {
    dispatch,
  };
}

{{#if wantActionsAndReducer}}
export default connect(mapStateToProps, mapDispatchToProps)({{ properCase name }});
{{else}}
export default connect(null, mapDispatchToProps)({{ properCase name }});
{{/if}}

export default compose(
  withReducer,
  withSaga,
  withConnect,
  withStyles(styles),
)({{ properCase name }});
